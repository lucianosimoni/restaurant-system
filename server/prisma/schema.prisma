// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Staff {
  id           Int           @id @default(autoincrement())
  credential   String        @unique
  passwordHash String
  // 游댋 Connections
  sectorLeader SectorLeader?
  staffInfo    StaffInfo     @relation(fields: [staffInfoId], references: [id]) // Mandatory One-to-one relation to Profile
  staffInfoId  Int           @unique //九걾잺FK游리
  sector       Sector?       @relation(fields: [sectorId], references: [id]) // Optional Many-to-one relation to Sector
  sectorId     Int? //九걾잺FK游리
}

model StaffInfo {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  role      String @default("STAFF")
  // 游댋 Connections
  staff     Staff?
}

model Sector {
  id             Int           @id @default(autoincrement())
  title          String        @unique
  description    String?
  // 游댋 Connections
  staff          Staff[] // One-to-many relation to Staff
  screen         Screen[] // Many-to-Many relation to Screen
  sectorLeader   SectorLeader?
  childSectors   Sector[]      @relation("SectorToSector") // Self-relation for nested sectors
  parentSector   Sector?       @relation("SectorToSector", fields: [parentSectorId], references: [id]) // Self-relation for nested sectors
  parentSectorId Int? //九걾잺FK游리
}

model SectorLeader {
  id       Int    @id @default(autoincrement())
  // 游댋 Connections
  staff    Staff  @relation(fields: [staffId], references: [id]) // Mandatory One-to-one relation to Staff
  staffId  Int    @unique //九걾잺FK游리
  sector   Sector @relation(fields: [sectorId], references: [id]) // Mandatory One-to-one relation to Sector
  sectorId Int    @unique //九걾잺FK游리
}

model Category {
  id             Int          @id @default(autoincrement())
  title          String       @unique
  // 游댋 Connections
  item           Item[]
  categoryInfo   CategoryInfo @relation(fields: [categoryInfoId], references: [id])
  categoryInfoId Int          @unique //九걾잺FK游리
}

model CategoryInfo {
  id          Int       @id @default(autoincrement())
  description String?
  imageURL    String?
  // 游댋 Connections
  category    Category?
}

model Item {
  id         Int        @id @default(autoincrement())
  code       Int        @unique @default(autoincrement())
  title      String     @unique
  // 游댋 Connections
  category   Category[]
  itemInfo   ItemInfo   @relation(fields: [itemInfoId], references: [id])
  itemInfoId Int        @unique //九걾잺FK游리
}

model ItemInfo {
  id          Int     @id @default(autoincrement())
  description String?
  imageURL    String?
  price       Float
  cost        Float
  type        String  @default("00")
  unitSystem  String  @default("UN")
  // 游댋 Connections
  item        Item?
}

// Screens (Pre-defined by Devs) -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
model Screen {
  id           Int        @id @default(autoincrement())
  title        String     @unique
  // 游댋 Connections
  screenInfo   ScreenInfo @relation(fields: [screenInfoId], references: [id])
  screenInfoId Int        @unique
  sector       Sector[]
}

model ScreenInfo {
  id          Int     @id @default(autoincrement())
  description String?
  path        String  @unique
  // 游댋 Connections
  screen      Screen?
}
